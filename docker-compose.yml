version: '3'

services:
  backend:
    networks:
      - proxy_app-network
    build:
      context: ./backend
      dockerfile: Dockerfile
    mem_limit: 512M
    ports:
      - "5001:5000"
    environment:
      - NODE_ENV
      - MONGO_HOST
      - MONGO_PORT
      - MONGO_USER
      - MONGO_PASS
      - JWT_SECRET
      - MINIO_ACCESS_KEY
      - MINIO_SECRET_KEY
      - OPENAI_API_KEY
      - LETSENCRYPT_HOST=api.devgree.com
      - LETSENCRYPT_EMAIL=jason@mavacode.com
      - VIRTUAL_HOST=api.devgree.com
      - VIRTUAL_PORT=5000
    volumes:
      - ./backend:/app
    depends_on:
      - mongodb

  frontend:
    networks:
      - proxy_app-network
    build:
      context: ./frontend
      dockerfile: Dockerfile
    mem_limit: 2048M
    user: "1000:1000"
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL
      - REACT_APP_S3_BASE_URL
      - LETSENCRYPT_HOST=devgree.com,www.devgree.com
      - LETSENCRYPT_EMAIL=jason@mavacode.com
      - VIRTUAL_HOST=devgree.com,www.devgree.com
      - VIRTUAL_PORT=3000

  mongodb:
    networks:
      - proxy_app-network
    image: mongo:latest
    mem_limit: 128M
    ports:
      - "27017:27017"
    volumes:
      - ./mongodb-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD

  minio:
    networks:
      - proxy_app-network
    image: minio/minio:latest
    mem_limit: 128M
    ports:
      - "9000:9000"
    environment:
      - MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD
      - LETSENCRYPT_HOST=devgree.com,www.devgree.com
      - LETSENCRYPT_EMAIL=jason@mavacode.com
      - VIRTUAL_HOST=cdn.devgree.com
      - VIRTUAL_PORT=9000
    volumes:
      - ./minio-data:/data
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  redis:
    networks:
      - proxy_app-network
    image: redis:latest
    mem_limit: 128M
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data
    command: redis-server --appendonly yes
 
  fastapi:
    networks:
      - proxy_app-network
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    mem_limit: 512M
    ports:
      - "8000:8000"
    environment:
      - FASTAPI_ENV=production
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MONGO_USER
      - MONGO_PASS
      - JWT_SECRET
    volumes:
      - ./fastapi:/app
    depends_on:
      - mongodb

networks:
  proxy_app-network:
    external: true