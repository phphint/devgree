{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';import{fetchUserPortfolio}from'../components/UserPortfolio/userPortfolioThunks';// Import the thunk\nexport var userPortfolioSlice=createSlice({name:'userPortfolio',initialState:{data:null,loading:false,error:null},reducers:{// Add a reset reducer\nresetUserPortfolio:function resetUserPortfolio(state){state.data=null;state.loading=false;state.error=null;}},extraReducers:function extraReducers(builder){builder.addCase(fetchUserPortfolio.pending,function(state){state.loading=true;state.error=null;}).addCase(fetchUserPortfolio.fulfilled,function(state,action){state.data=action.payload;state.loading=false;}).addCase(fetchUserPortfolio.rejected,function(state,action){state.error=action.payload;state.data=null;// Clear the data if there's an error\nstate.loading=false;});}});// Export the reset action so it can be dispatched\nvar resetUserPortfolio=userPortfolioSlice.actions.resetUserPortfolio;export{resetUserPortfolio};export default userPortfolioSlice.reducer;","map":{"version":3,"names":["createSlice","fetchUserPortfolio","userPortfolioSlice","name","initialState","data","loading","error","reducers","resetUserPortfolio","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/app/src/reducers/userPortfolioSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { fetchUserPortfolio } from '../components/UserPortfolio/userPortfolioThunks'; // Import the thunk\n\nexport const userPortfolioSlice = createSlice({\n  name: 'userPortfolio',\n  initialState: {\n    data: null,\n    loading: false,\n    error: null,\n  },\n  reducers: {\n    // Add a reset reducer\n    resetUserPortfolio: (state) => {\n      state.data = null;\n      state.loading = false;\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchUserPortfolio.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchUserPortfolio.fulfilled, (state, action) => {\n        state.data = action.payload;\n        state.loading = false;\n      })\n      .addCase(fetchUserPortfolio.rejected, (state, action) => {\n        state.error = action.payload;\n        state.data = null; // Clear the data if there's an error\n        state.loading = false;\n      });\n  },\n});\n\n// Export the reset action so it can be dispatched\nexport const { resetUserPortfolio } = userPortfolioSlice.actions;\n\nexport default userPortfolioSlice.reducer;\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,kBAAkB,KAAQ,iDAAiD,CAAE;AAEtF,MAAO,IAAM,CAAAC,kBAAkB,CAAGF,WAAW,CAAC,CAC5CG,IAAI,CAAE,eAAe,CACrBC,YAAY,CAAE,CACZC,IAAI,CAAE,IAAI,CACVC,OAAO,CAAE,KAAK,CACdC,KAAK,CAAE,IACT,CAAC,CACDC,QAAQ,CAAE,CACR;AACAC,kBAAkB,CAAE,SAAAA,mBAACC,KAAK,CAAK,CAC7BA,KAAK,CAACL,IAAI,CAAG,IAAI,CACjBK,KAAK,CAACJ,OAAO,CAAG,KAAK,CACrBI,KAAK,CAACH,KAAK,CAAG,IAAI,CACpB,CACF,CAAC,CACDI,aAAa,CAAE,SAAAA,cAACC,OAAO,CAAK,CAC1BA,OAAO,CACJC,OAAO,CAACZ,kBAAkB,CAACa,OAAO,CAAE,SAACJ,KAAK,CAAK,CAC9CA,KAAK,CAACJ,OAAO,CAAG,IAAI,CACpBI,KAAK,CAACH,KAAK,CAAG,IAAI,CACpB,CAAC,CAAC,CACDM,OAAO,CAACZ,kBAAkB,CAACc,SAAS,CAAE,SAACL,KAAK,CAAEM,MAAM,CAAK,CACxDN,KAAK,CAACL,IAAI,CAAGW,MAAM,CAACC,OAAO,CAC3BP,KAAK,CAACJ,OAAO,CAAG,KAAK,CACvB,CAAC,CAAC,CACDO,OAAO,CAACZ,kBAAkB,CAACiB,QAAQ,CAAE,SAACR,KAAK,CAAEM,MAAM,CAAK,CACvDN,KAAK,CAACH,KAAK,CAAGS,MAAM,CAACC,OAAO,CAC5BP,KAAK,CAACL,IAAI,CAAG,IAAI,CAAE;AACnBK,KAAK,CAACJ,OAAO,CAAG,KAAK,CACvB,CAAC,CAAC,CACN,CACF,CAAC,CAAC,CAEF;AACO,GAAQ,CAAAG,kBAAkB,CAAKP,kBAAkB,CAACiB,OAAO,CAAjDV,kBAAkB,CAAgC,OAAAA,kBAAA,EAEjE,cAAe,CAAAP,kBAAkB,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}