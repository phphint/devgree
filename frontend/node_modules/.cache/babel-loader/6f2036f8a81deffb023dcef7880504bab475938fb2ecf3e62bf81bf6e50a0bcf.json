{"ast":null,"code":"import{configureStore,combineReducers}from'@reduxjs/toolkit';import{persistStore,persistReducer}from'redux-persist';import storage from'redux-persist/lib/storage';// defaults to localStorage for web\nimport authReducer from'../reducers/authSlice';import uiReducer from'../reducers/uiSlice';import userPortfolioReducer from'../reducers/userPortfolioSlice';import dashboardReducer from'../reducers/dashboardSlice';var persistConfig={key:'root',storage:storage// Add other configurations if needed\n};var rootReducer=combineReducers({auth:authReducer,ui:uiReducer,userPortfolio:userPortfolioReducer,dashboard:dashboardReducer// Adding the dashboard reducer\n});var persistedReducer=persistReducer(persistConfig,rootReducer);export var store=configureStore({reducer:persistedReducer,middleware:function middleware(getDefaultMiddleware){return getDefaultMiddleware({serializableCheck:{ignoredActions:['auth/updateProfile','persist/PERSIST','persist/REHYDRATE','persist/REGISTER']}});}// Add any other middleware or enhancers if needed\n});export var persistor=persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","persistStore","persistReducer","storage","authReducer","uiReducer","userPortfolioReducer","dashboardReducer","persistConfig","key","rootReducer","auth","ui","userPortfolio","dashboard","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/app/src/store/store.js"],"sourcesContent":["import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport authReducer from '../reducers/authSlice';\nimport uiReducer from '../reducers/uiSlice';\nimport userPortfolioReducer from '../reducers/userPortfolioSlice';\nimport dashboardReducer from '../reducers/dashboardSlice';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  // Add other configurations if needed\n};\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  ui: uiReducer,\n  userPortfolio: userPortfolioReducer,\n  dashboard: dashboardReducer, // Adding the dashboard reducer\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['auth/updateProfile','persist/PERSIST', 'persist/REHYDRATE', 'persist/REGISTER'],\n      },\n    }),\n  // Add any other middleware or enhancers if needed\n});\n\nexport const persistor = persistStore(store);\n"],"mappings":"AAAA,OAASA,cAAc,CAAEC,eAAe,KAAQ,kBAAkB,CAClE,OAASC,YAAY,CAAEC,cAAc,KAAQ,eAAe,CAC5D,MAAO,CAAAC,OAAO,KAAM,2BAA2B,CAAE;AACjD,MAAO,CAAAC,WAAW,KAAM,uBAAuB,CAC/C,MAAO,CAAAC,SAAS,KAAM,qBAAqB,CAC3C,MAAO,CAAAC,oBAAoB,KAAM,gCAAgC,CACjE,MAAO,CAAAC,gBAAgB,KAAM,4BAA4B,CAEzD,GAAM,CAAAC,aAAa,CAAG,CACpBC,GAAG,CAAE,MAAM,CACXN,OAAO,CAAPA,OACA;AACF,CAAC,CAED,GAAM,CAAAO,WAAW,CAAGV,eAAe,CAAC,CAClCW,IAAI,CAAEP,WAAW,CACjBQ,EAAE,CAAEP,SAAS,CACbQ,aAAa,CAAEP,oBAAoB,CACnCQ,SAAS,CAAEP,gBAAkB;AAC/B,CAAC,CAAC,CAEF,GAAM,CAAAQ,gBAAgB,CAAGb,cAAc,CAACM,aAAa,CAAEE,WAAW,CAAC,CAEnE,MAAO,IAAM,CAAAM,KAAK,CAAGjB,cAAc,CAAC,CAClCkB,OAAO,CAAEF,gBAAgB,CACzBG,UAAU,CAAE,SAAAA,WAACC,oBAAoB,QAC/B,CAAAA,oBAAoB,CAAC,CACnBC,iBAAiB,CAAE,CACjBC,cAAc,CAAE,CAAC,oBAAoB,CAAC,iBAAiB,CAAE,mBAAmB,CAAE,kBAAkB,CAClG,CACF,CAAC,CAAC,EACJ;AACF,CAAC,CAAC,CAEF,MAAO,IAAM,CAAAC,SAAS,CAAGrB,YAAY,CAACe,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}