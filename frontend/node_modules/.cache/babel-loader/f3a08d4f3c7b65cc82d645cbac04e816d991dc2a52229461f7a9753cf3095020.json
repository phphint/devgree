{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { updateProfile } from \"../../reducers/authSlice\"; // Adjust path as necessary\n\nexport const updateProfileAsync = createAsyncThunk(\"profile/updateProfile\", async (formData, thunkAPI) => {\n  const state = thunkAPI.getState(); // Get the current state\n  const token = state.auth.token; // Access the token from the state\n  console.log(\"Token:\", token); // Debug: Log the token\n\n  try {\n    console.log(\"Sending request to update profile\"); // Debug: Log before sending the request\n    const response = await axios.put(\"http://localhost:5001/api/profile\", formData, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        // Use the token from the state\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    console.log(\"Profile update successful:\", response.data); // Debug: Log the response data\n    // Dispatch the updateProfile action from authSlice with the response data\n    thunkAPI.dispatch(updateProfile(response.data));\n    return response.data;\n  } catch (error) {\n    console.error(\"Error in updateProfileAsync:\", error.response ? error.response.data : error); // Debug: Log the error\n    return thunkAPI.rejectWithValue(error.response ? error.response.data : error);\n  }\n});","map":{"version":3,"names":["createAsyncThunk","axios","updateProfile","updateProfileAsync","formData","thunkAPI","state","getState","token","auth","console","log","response","put","headers","Authorization","data","dispatch","error","rejectWithValue"],"sources":["/app/src/components/UserDashboard/profileThunks.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { updateProfile } from \"../../reducers/authSlice\"; // Adjust path as necessary\n\nexport const updateProfileAsync = createAsyncThunk(\n  \"profile/updateProfile\",\n  async (formData, thunkAPI) => {\n    const state = thunkAPI.getState(); // Get the current state\n    const token = state.auth.token; // Access the token from the state\n    console.log(\"Token:\", token); // Debug: Log the token\n\n    try {\n      console.log(\"Sending request to update profile\"); // Debug: Log before sending the request\n      const response = await axios.put(\n        \"http://localhost:5001/api/profile\",\n        formData,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`, // Use the token from the state\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n\n      console.log(\"Profile update successful:\", response.data); // Debug: Log the response data\n      // Dispatch the updateProfile action from authSlice with the response data\n      thunkAPI.dispatch(updateProfile(response.data));\n\n      return response.data;\n    } catch (error) {\n      console.error(\"Error in updateProfileAsync:\", error.response ? error.response.data : error); // Debug: Log the error\n      return thunkAPI.rejectWithValue(error.response ? error.response.data : error);\n    }\n  }\n);\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,0BAA0B,CAAC,CAAC;;AAE1D,OAAO,MAAMC,kBAAkB,GAAGH,gBAAgB,CAChD,uBAAuB,EACvB,OAAOI,QAAQ,EAAEC,QAAQ,KAAK;EAC5B,MAAMC,KAAK,GAAGD,QAAQ,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC;EACnC,MAAMC,KAAK,GAAGF,KAAK,CAACG,IAAI,CAACD,KAAK,CAAC,CAAC;EAChCE,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEH,KAAK,CAAC,CAAC,CAAC;;EAE9B,IAAI;IACFE,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC,CAAC,CAAC;IAClD,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAC9B,mCAAmC,EACnCT,QAAQ,EACR;MACEU,OAAO,EAAE;QACPC,aAAa,EAAG,UAASP,KAAM,EAAC;QAAE;QAClC,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IAEDE,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEC,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;IAC1D;IACAX,QAAQ,CAACY,QAAQ,CAACf,aAAa,CAACU,QAAQ,CAACI,IAAI,CAAC,CAAC;IAE/C,OAAOJ,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdR,OAAO,CAACQ,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACN,QAAQ,GAAGM,KAAK,CAACN,QAAQ,CAACI,IAAI,GAAGE,KAAK,CAAC,CAAC,CAAC;IAC7F,OAAOb,QAAQ,CAACc,eAAe,CAACD,KAAK,CAACN,QAAQ,GAAGM,KAAK,CAACN,QAAQ,CAACI,IAAI,GAAGE,KAAK,CAAC;EAC/E;AACF,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}