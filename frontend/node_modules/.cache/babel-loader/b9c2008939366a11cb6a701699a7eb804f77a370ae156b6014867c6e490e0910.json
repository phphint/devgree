{"ast":null,"code":"var _s = $RefreshSig$();\n// PortfolioDataFetcher.js\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchUserPortfolio } from '../../UserDashboard/dashboardThunks.js';\nconst PortfolioDataFetcher = () => {\n  _s();\n  const dispatch = useDispatch();\n  const userId = useSelector(state => state.auth.userId);\n  const token = useSelector(state => state.auth.token);\n  const email = useSelector(state => state.dashboard.email); // Add this line to get the email from dashboardSlice\n\n  useEffect(() => {\n    if (userId && token && email === \"\") {\n      // Dispatch the thunk to fetch the user's portfolio\n      dispatch(fetchUserPortfolio({\n        identifier: userId,\n        token\n      }));\n    }\n  }, [userId, token, dispatch]);\n  return null; // Component does not render anything\n};\n_s(PortfolioDataFetcher, \"nzBCqqxv9Ib0awZpV23hWhk5TvA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = PortfolioDataFetcher;\nexport default PortfolioDataFetcher;\nvar _c;\n$RefreshReg$(_c, \"PortfolioDataFetcher\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","fetchUserPortfolio","PortfolioDataFetcher","_s","dispatch","userId","state","auth","token","email","dashboard","identifier","_c","$RefreshReg$"],"sources":["/app/src/components/UserDashboard/hooks/PortfolioDataFetcher.js"],"sourcesContent":["// PortfolioDataFetcher.js\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchUserPortfolio } from '../../UserDashboard/dashboardThunks.js';\n\nconst PortfolioDataFetcher = () => {\n  const dispatch = useDispatch();\n  const userId = useSelector(state => state.auth.userId);\n  const token = useSelector(state => state.auth.token);\n  const email = useSelector(state => state.dashboard.email); // Add this line to get the email from dashboardSlice\n\n\n  useEffect(() => {\n    if (userId && token && email === \"\") {\n      // Dispatch the thunk to fetch the user's portfolio\n      dispatch(fetchUserPortfolio({ identifier: userId, token }));\n    }\n  }, [userId, token, dispatch]);\n\n\n  return null; // Component does not render anything\n};\n\nexport default PortfolioDataFetcher;\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,kBAAkB,QAAQ,wCAAwC;AAE3E,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,MAAM,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACF,MAAM,CAAC;EACtD,MAAMG,KAAK,GAAGR,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACC,KAAK,CAAC;EACpD,MAAMC,KAAK,GAAGT,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACI,SAAS,CAACD,KAAK,CAAC,CAAC,CAAC;;EAG3DX,SAAS,CAAC,MAAM;IACd,IAAIO,MAAM,IAAIG,KAAK,IAAIC,KAAK,KAAK,EAAE,EAAE;MACnC;MACAL,QAAQ,CAACH,kBAAkB,CAAC;QAAEU,UAAU,EAAEN,MAAM;QAAEG;MAAM,CAAC,CAAC,CAAC;IAC7D;EACF,CAAC,EAAE,CAACH,MAAM,EAAEG,KAAK,EAAEJ,QAAQ,CAAC,CAAC;EAG7B,OAAO,IAAI,CAAC,CAAC;AACf,CAAC;AAACD,EAAA,CAhBID,oBAAoB;EAAA,QACPH,WAAW,EACbC,WAAW,EACZA,WAAW,EACXA,WAAW;AAAA;AAAAY,EAAA,GAJrBV,oBAAoB;AAkB1B,eAAeA,oBAAoB;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}