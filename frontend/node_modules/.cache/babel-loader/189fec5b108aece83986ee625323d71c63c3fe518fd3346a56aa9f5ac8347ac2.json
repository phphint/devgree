{"ast":null,"code":"// PortfolioDataFetcher.js\nimport{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{fetchUserPortfolio}from'../../UserDashboard/dashboardThunks.js';var PortfolioDataFetcher=function PortfolioDataFetcher(){var dispatch=useDispatch();var userId=useSelector(function(state){return state.auth.userId;});var token=useSelector(function(state){return state.auth.token;});var authEmail=useSelector(function(state){return state.auth.email;});// Get the email from auth state\nvar dashboardEmail=useSelector(function(state){return state.dashboard.email;});// Get the email from dashboard state\nuseEffect(function(){// Check if the user is authenticated and either dashboard email is empty or doesn't match auth email\nif(userId&&token&&(dashboardEmail===\"\"||authEmail!==dashboardEmail)){// Dispatch the thunk to fetch the user's portfolio\ndispatch(fetchUserPortfolio({identifier:userId,token:token}));}},[userId,token,authEmail,dashboardEmail,dispatch]);// Dependencies for useEffect\nreturn null;// Component does not render anything\n};export default PortfolioDataFetcher;","map":{"version":3,"names":["useEffect","useDispatch","useSelector","fetchUserPortfolio","PortfolioDataFetcher","dispatch","userId","state","auth","token","authEmail","email","dashboardEmail","dashboard","identifier"],"sources":["/app/src/components/UserDashboard/hooks/PortfolioDataFetcher.js"],"sourcesContent":["// PortfolioDataFetcher.js\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchUserPortfolio } from '../../UserDashboard/dashboardThunks.js';\n\nconst PortfolioDataFetcher = () => {\n  const dispatch = useDispatch();\n  const userId = useSelector(state => state.auth.userId);\n  const token = useSelector(state => state.auth.token);\n  const authEmail = useSelector(state => state.auth.email); // Get the email from auth state\n  const dashboardEmail = useSelector(state => state.dashboard.email); // Get the email from dashboard state\n\n  useEffect(() => {\n    // Check if the user is authenticated and either dashboard email is empty or doesn't match auth email\n    if (userId && token && (dashboardEmail === \"\" || authEmail !== dashboardEmail)) {\n      // Dispatch the thunk to fetch the user's portfolio\n      dispatch(fetchUserPortfolio({ identifier: userId, token }));\n    }\n  }, [userId, token, authEmail, dashboardEmail, dispatch]); // Dependencies for useEffect\n\n\n\n  return null; // Component does not render anything\n};\n\nexport default PortfolioDataFetcher;\n"],"mappings":"AAAA;AACA,OAASA,SAAS,KAAQ,OAAO,CACjC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,kBAAkB,KAAQ,wCAAwC,CAE3E,GAAM,CAAAC,oBAAoB,CAAG,QAAvB,CAAAA,oBAAoBA,CAAA,CAAS,CACjC,GAAM,CAAAC,QAAQ,CAAGJ,WAAW,CAAC,CAAC,CAC9B,GAAM,CAAAK,MAAM,CAAGJ,WAAW,CAAC,SAAAK,KAAK,QAAI,CAAAA,KAAK,CAACC,IAAI,CAACF,MAAM,GAAC,CACtD,GAAM,CAAAG,KAAK,CAAGP,WAAW,CAAC,SAAAK,KAAK,QAAI,CAAAA,KAAK,CAACC,IAAI,CAACC,KAAK,GAAC,CACpD,GAAM,CAAAC,SAAS,CAAGR,WAAW,CAAC,SAAAK,KAAK,QAAI,CAAAA,KAAK,CAACC,IAAI,CAACG,KAAK,GAAC,CAAE;AAC1D,GAAM,CAAAC,cAAc,CAAGV,WAAW,CAAC,SAAAK,KAAK,QAAI,CAAAA,KAAK,CAACM,SAAS,CAACF,KAAK,GAAC,CAAE;AAEpEX,SAAS,CAAC,UAAM,CACd;AACA,GAAIM,MAAM,EAAIG,KAAK,GAAKG,cAAc,GAAK,EAAE,EAAIF,SAAS,GAAKE,cAAc,CAAC,CAAE,CAC9E;AACAP,QAAQ,CAACF,kBAAkB,CAAC,CAAEW,UAAU,CAAER,MAAM,CAAEG,KAAK,CAALA,KAAM,CAAC,CAAC,CAAC,CAC7D,CACF,CAAC,CAAE,CAACH,MAAM,CAAEG,KAAK,CAAEC,SAAS,CAAEE,cAAc,CAAEP,QAAQ,CAAC,CAAC,CAAE;AAI1D,MAAO,KAAI,CAAE;AACf,CAAC,CAED,cAAe,CAAAD,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}