{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\n// Define the initial state with additional properties for the user's full name and profile picture\nconst initialState = {\n  isLoggedIn: false,\n  token: null,\n  fullName: '',\n  profilePicture: ''\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      // Assuming action.payload is an object with token, fullName, and profilePicture\n      const {\n        token,\n        fullName,\n        profilePicture\n      } = action.payload;\n      localStorage.setItem('authToken', token); // Save the token to localStorage\n      state.token = token; // Update the token in the state\n      state.fullName = fullName; // Update the full name in the state\n      state.profilePicture = profilePicture; // Update the profile picture in the state\n      state.isLoggedIn = true; // Set the login state to true\n    },\n\n    logout: state => {\n      localStorage.removeItem('authToken'); // Remove the token from localStorage\n      state.token = null; // Reset the token in the state\n      state.fullName = ''; // Reset the full name in the state\n      state.profilePicture = ''; // Reset the profile picture in the state\n      state.isLoggedIn = false; // Set the login state to false\n    }\n    // ... potentially other reducers ...\n  }\n});\n\nexport const {\n  login,\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isLoggedIn","token","fullName","profilePicture","authSlice","name","reducers","login","state","action","payload","localStorage","setItem","logout","removeItem","actions","reducer"],"sources":["/app/src/reducers/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n// Define the initial state with additional properties for the user's full name and profile picture\nconst initialState = {\n  isLoggedIn: false,\n  token: null,\n  fullName: '',\n  profilePicture: ''\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      // Assuming action.payload is an object with token, fullName, and profilePicture\n      const { token, fullName, profilePicture } = action.payload;\n      localStorage.setItem('authToken', token); // Save the token to localStorage\n      state.token = token; // Update the token in the state\n      state.fullName = fullName; // Update the full name in the state\n      state.profilePicture = profilePicture; // Update the profile picture in the state\n      state.isLoggedIn = true; // Set the login state to true\n    },\n    logout: (state) => {\n      localStorage.removeItem('authToken'); // Remove the token from localStorage\n      state.token = null; // Reset the token in the state\n      state.fullName = ''; // Reset the full name in the state\n      state.profilePicture = ''; // Reset the profile picture in the state\n      state.isLoggedIn = false; // Set the login state to false\n    }\n    // ... potentially other reducers ...\n  }\n});\n\nexport const { login, logout } = authSlice.actions;\n\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,KAAK;EACjBC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,EAAE;EACZC,cAAc,EAAE;AAClB,CAAC;AAED,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC5BO,IAAI,EAAE,MAAM;EACZN,YAAY;EACZO,QAAQ,EAAE;IACRC,KAAK,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxB;MACA,MAAM;QAAER,KAAK;QAAEC,QAAQ;QAAEC;MAAe,CAAC,GAAGM,MAAM,CAACC,OAAO;MAC1DC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEX,KAAK,CAAC,CAAC,CAAC;MAC1CO,KAAK,CAACP,KAAK,GAAGA,KAAK,CAAC,CAAC;MACrBO,KAAK,CAACN,QAAQ,GAAGA,QAAQ,CAAC,CAAC;MAC3BM,KAAK,CAACL,cAAc,GAAGA,cAAc,CAAC,CAAC;MACvCK,KAAK,CAACR,UAAU,GAAG,IAAI,CAAC,CAAC;IAC3B,CAAC;;IACDa,MAAM,EAAGL,KAAK,IAAK;MACjBG,YAAY,CAACG,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;MACtCN,KAAK,CAACP,KAAK,GAAG,IAAI,CAAC,CAAC;MACpBO,KAAK,CAACN,QAAQ,GAAG,EAAE,CAAC,CAAC;MACrBM,KAAK,CAACL,cAAc,GAAG,EAAE,CAAC,CAAC;MAC3BK,KAAK,CAACR,UAAU,GAAG,KAAK,CAAC,CAAC;IAC5B;IACA;EACF;AACF,CAAC,CAAC;;AAEF,OAAO,MAAM;EAAEO,KAAK;EAAEM;AAAO,CAAC,GAAGT,SAAS,CAACW,OAAO;AAElD,eAAeX,SAAS,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}