{"ast":null,"code":"var _jsxFileName = \"/app/src/components/UserDashboard/Settings.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { updateSettings } from '../dashboardThunks'; // Create this thunk for updating settings\nimport TopNav from './TopNav/index';\nimport SideNav from './SideNav';\nimport Footer from '../Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SettingsSchema = Yup.object().shape({\n  privacy: Yup.string().required('Privacy setting is required'),\n  notifications: Yup.boolean(),\n  profileSlug: Yup.string()\n  // Add other fields as necessary\n});\n\nconst Settings = () => {\n  _s();\n  const dispatch = useDispatch();\n  const settings = useSelector(state => state.dashboard.settings);\n  const formik = useFormik({\n    initialValues: {\n      privacy: settings.privacy || 'private',\n      notifications: settings.notifications || false,\n      profileSlug: settings.profileSlug || ''\n      // Initialize other fields if necessary\n    },\n\n    validationSchema: SettingsSchema,\n    onSubmit: values => {\n      dispatch(updateSettings(values)); // Dispatch action to update settings\n    }\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(SideNav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"col-md-9 ms-sm-auto col-lg-10 px-md-4 bg-white text-dark\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: formik.handleSubmit,\n            className: \"container mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"privacy\",\n                className: \"form-label\",\n                children: \"Privacy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"privacy\",\n                name: \"privacy\",\n                onChange: formik.handleChange,\n                value: formik.values.privacy,\n                className: \"form-control\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"public\",\n                  children: \"Public\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"private\",\n                  children: \"Private\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3 form-check\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: \"notifications\",\n                name: \"notifications\",\n                onChange: formik.handleChange,\n                checked: formik.values.notifications,\n                className: \"form-check-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"notifications\",\n                className: \"form-check-label\",\n                children: \"Enable Notifications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"profileSlug\",\n                className: \"form-label\",\n                children: \"Profile Slug\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"profileSlug\",\n                name: \"profileSlug\",\n                onChange: formik.handleChange,\n                value: formik.values.profileSlug,\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Settings, \"kwkbdQ4YyQXQFOLlFEZ3MbQZQO0=\", false, function () {\n  return [useDispatch, useSelector, useFormik];\n});\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useSelector","useDispatch","useFormik","Yup","updateSettings","TopNav","SideNav","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","SettingsSchema","object","shape","privacy","string","required","notifications","boolean","profileSlug","Settings","_s","dispatch","settings","state","dashboard","formik","initialValues","validationSchema","onSubmit","values","children","fileName","_jsxFileName","lineNumber","columnNumber","className","handleSubmit","htmlFor","id","name","onChange","handleChange","value","type","checked","_c","$RefreshReg$"],"sources":["/app/src/components/UserDashboard/Settings.js"],"sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { updateSettings } from '../dashboardThunks'; // Create this thunk for updating settings\nimport TopNav from './TopNav/index';\nimport SideNav from './SideNav';\nimport Footer from '../Footer';\n\nconst SettingsSchema = Yup.object().shape({\n  privacy: Yup.string().required('Privacy setting is required'),\n  notifications: Yup.boolean(),\n  profileSlug: Yup.string(),\n  // Add other fields as necessary\n});\n\nconst Settings = () => {\n  const dispatch = useDispatch();\n  const settings = useSelector((state) => state.dashboard.settings);\n\n  const formik = useFormik({\n    initialValues: {\n      privacy: settings.privacy || 'private',\n      notifications: settings.notifications || false,\n      profileSlug: settings.profileSlug || '',\n      // Initialize other fields if necessary\n    },\n    validationSchema: SettingsSchema,\n    onSubmit: (values) => {\n      dispatch(updateSettings(values)); // Dispatch action to update settings\n    },\n  });\n\n  return (\n    <>\n      <TopNav />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <SideNav />\n          <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4 bg-white text-dark\">\n            <h1>Settings</h1>\n            <form onSubmit={formik.handleSubmit} className=\"container mt-3\">\n              {/* Privacy Setting */}\n              <div className=\"mb-3\">\n                <label htmlFor=\"privacy\" className=\"form-label\">Privacy</label>\n                <select\n                  id=\"privacy\"\n                  name=\"privacy\"\n                  onChange={formik.handleChange}\n                  value={formik.values.privacy}\n                  className=\"form-control\"\n                >\n                  <option value=\"public\">Public</option>\n                  <option value=\"private\">Private</option>\n                </select>\n              </div>\n\n              {/* Notifications Setting */}\n              <div className=\"mb-3 form-check\">\n                <input\n                  type=\"checkbox\"\n                  id=\"notifications\"\n                  name=\"notifications\"\n                  onChange={formik.handleChange}\n                  checked={formik.values.notifications}\n                  className=\"form-check-input\"\n                />\n                <label htmlFor=\"notifications\" className=\"form-check-label\">Enable Notifications</label>\n              </div>\n\n              {/* Profile Slug */}\n              <div className=\"mb-3\">\n                <label htmlFor=\"profileSlug\" className=\"form-label\">Profile Slug</label>\n                <input\n                  type=\"text\"\n                  id=\"profileSlug\"\n                  name=\"profileSlug\"\n                  onChange={formik.handleChange}\n                  value={formik.values.profileSlug}\n                  className=\"form-control\"\n                />\n              </div>\n\n              {/* Add other fields as necessary */}\n\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Save Changes\n              </button>\n            </form>\n          </main>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default Settings;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}