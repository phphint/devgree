{"ast":null,"code":"var _jsxFileName = \"/app/src/components/ProtectedRoute.js\",\n  _s = $RefreshSig$();\n// ProtectedRoute.js\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  ...rest\n}) => {\n  _s();\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  return isLoggedIn ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 34\n  }, this);\n};\n_s(ProtectedRoute, \"wwozkPYuXjHFfszlt2mcSB3o0is=\", false, function () {\n  return [useSelector];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useSelector","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","rest","_s","isLoggedIn","state","auth","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/components/ProtectedRoute.js"],"sourcesContent":["// ProtectedRoute.js\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nconst ProtectedRoute = ({ children, ...rest }) => {\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n\n  return isLoggedIn ? children : <Navigate to=\"/login\" />;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAMC,UAAU,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACF,UAAU,CAAC;EAE9D,OAAOA,UAAU,GAAGH,QAAQ,gBAAGF,OAAA,CAACF,QAAQ;IAACU,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzD,CAAC;AAACR,EAAA,CAJIH,cAAc;EAAA,QACCJ,WAAW;AAAA;AAAAgB,EAAA,GAD1BZ,cAAc;AAMpB,eAAeA,cAAc;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}