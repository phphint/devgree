{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { updateEducationById, updateWorkExperienceById, updateSkillById, updateProjectById, updateCertificationById, updateLanguageById, removeEducationById\n// ... other import actions ...\n} from '../../reducers/dashboardSlice';\n\n// Example thunk for editing an education item\nexport const editEducation = createAsyncThunk('dashboard/editEducation', async ({\n  itemId,\n  newData\n}, {\n  dispatch\n}) => {\n  try {\n    const response = await axios.put(`http://backend:5000/dashboard/education/${itemId}`, newData);\n    dispatch(updateEducationById({\n      _id: itemId,\n      newData: response.data\n    }));\n    return response.data;\n  } catch (error) {\n    console.error('Error editing education:', error);\n    // Handle errors as needed\n  }\n});\n\n// Similar thunks for other sections like workExperience, skills, etc.\n\n// Thunk for deleting an education item\nexport const deleteEducation = createAsyncThunk('dashboard/deleteEducation', async (educationId, {\n  dispatch\n}) => {\n  try {\n    const response = await axios.delete(`http://backend:5000/dashboard/education/${educationId}`);\n    if (response.status === 200) {\n      dispatch(removeEducationById(educationId));\n    }\n  } catch (error) {\n    console.error('Error deleting education:', error);\n    // Handle errors as needed\n  }\n});\n\n// Thunk for fetching the user's portfolio\nexport const fetchUserPortfolio = createAsyncThunk('dashboard/fetchUserPortfolio', async ({\n  identifier,\n  token\n}, {\n  dispatch\n}) => {\n  try {\n    const response = await axios.get(`http://backend:5000/api/portfolio/${identifier}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    dispatch(setDashboardData(response.data));\n    return response.data;\n  } catch (error) {\n    console.error('fetchUserPortfolio error:', error);\n    // Handle errors as needed\n  }\n});","map":{"version":3,"names":["createAsyncThunk","axios","updateEducationById","updateWorkExperienceById","updateSkillById","updateProjectById","updateCertificationById","updateLanguageById","removeEducationById","editEducation","itemId","newData","dispatch","response","put","_id","data","error","console","deleteEducation","educationId","delete","status","fetchUserPortfolio","identifier","token","get","headers","Authorization","setDashboardData"],"sources":["/app/src/components/UserDashboard/dashboardThunks.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport {\n  updateEducationById,\n  updateWorkExperienceById,\n  updateSkillById,\n  updateProjectById,\n  updateCertificationById,\n  updateLanguageById,\n  removeEducationById,\n  // ... other import actions ...\n} from '../../reducers/dashboardSlice';\n\n// Example thunk for editing an education item\nexport const editEducation = createAsyncThunk(\n  'dashboard/editEducation',\n  async ({ itemId, newData }, { dispatch }) => {\n    try {\n        const response = await axios.put(`http://backend:5000/dashboard/education/${itemId}`, newData);\n      dispatch(updateEducationById({ _id: itemId, newData: response.data }));\n      return response.data;\n    } catch (error) {\n      console.error('Error editing education:', error);\n      // Handle errors as needed\n    }\n  }\n);\n\n// Similar thunks for other sections like workExperience, skills, etc.\n\n// Thunk for deleting an education item\nexport const deleteEducation = createAsyncThunk(\n    'dashboard/deleteEducation',\n    async (educationId, { dispatch }) => {\n      try {\n        const response = await axios.delete(`http://backend:5000/dashboard/education/${educationId}`);\n        if (response.status === 200) {\n          dispatch(removeEducationById(educationId));\n        }\n      } catch (error) {\n        console.error('Error deleting education:', error);\n        // Handle errors as needed\n      }\n    }\n  );\n  \n  // Thunk for fetching the user's portfolio\nexport const fetchUserPortfolio = createAsyncThunk(\n    'dashboard/fetchUserPortfolio',\n    async ({ identifier, token }, { dispatch }) => {\n      try {\n        const response = await axios.get(`http://backend:5000/api/portfolio/${identifier}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        dispatch(setDashboardData(response.data));\n        return response.data;\n      } catch (error) {\n        console.error('fetchUserPortfolio error:', error);\n        // Handle errors as needed\n      }\n    }\n  );\n  "],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,mBAAmB,EACnBC,wBAAwB,EACxBC,eAAe,EACfC,iBAAiB,EACjBC,uBAAuB,EACvBC,kBAAkB,EAClBC;AACA;AAAA,OACK,+BAA+B;;AAEtC;AACA,OAAO,MAAMC,aAAa,GAAGT,gBAAgB,CAC3C,yBAAyB,EACzB,OAAO;EAAEU,MAAM;EAAEC;AAAQ,CAAC,EAAE;EAAEC;AAAS,CAAC,KAAK;EAC3C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAE,2CAA0CJ,MAAO,EAAC,EAAEC,OAAO,CAAC;IAChGC,QAAQ,CAACV,mBAAmB,CAAC;MAAEa,GAAG,EAAEL,MAAM;MAAEC,OAAO,EAAEE,QAAQ,CAACG;IAAK,CAAC,CAAC,CAAC;IACtE,OAAOH,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD;EACF;AACF,CACF,CAAC;;AAED;;AAEA;AACA,OAAO,MAAME,eAAe,GAAGnB,gBAAgB,CAC3C,2BAA2B,EAC3B,OAAOoB,WAAW,EAAE;EAAER;AAAS,CAAC,KAAK;EACnC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACoB,MAAM,CAAE,2CAA0CD,WAAY,EAAC,CAAC;IAC7F,IAAIP,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAE;MAC3BV,QAAQ,CAACJ,mBAAmB,CAACY,WAAW,CAAC,CAAC;IAC5C;EACF,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD;EACF;AACF,CACF,CAAC;;AAED;AACF,OAAO,MAAMM,kBAAkB,GAAGvB,gBAAgB,CAC9C,8BAA8B,EAC9B,OAAO;EAAEwB,UAAU;EAAEC;AAAM,CAAC,EAAE;EAAEb;AAAS,CAAC,KAAK;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACyB,GAAG,CAAE,qCAAoCF,UAAW,EAAC,EAAE;MAClFG,OAAO,EAAE;QAAEC,aAAa,EAAG,UAASH,KAAM;MAAE;IAC9C,CAAC,CAAC;IACFb,QAAQ,CAACiB,gBAAgB,CAAChB,QAAQ,CAACG,IAAI,CAAC,CAAC;IACzC,OAAOH,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD;EACF;AACF,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}