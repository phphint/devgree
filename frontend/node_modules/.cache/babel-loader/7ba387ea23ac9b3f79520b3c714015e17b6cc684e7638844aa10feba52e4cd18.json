{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchPortfolioData } from './services/portfolioService';\nexport const fetchUserPortfolio = createAsyncThunk('userPortfolio/fetchUserPortfolio', async (token, thunkAPI) => {\n  console.log('fetchUserPortfolio thunk called with token:', token);\n  try {\n    const response = await fetchPortfolioData(token);\n    console.log('fetchUserPortfolio response:', response);\n    return response; // Assuming the response is the data object itself\n  } catch (error) {\n    console.error('fetchUserPortfolio error:', error);\n    if (!error.response) {\n      // Handle errors without a response (network errors, timeouts, etc.)\n      return thunkAPI.rejectWithValue({\n        message: error.message || 'An unknown error occurred'\n      });\n    }\n    // Handle HTTP errors\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\n\n// Export your thunks as needed\nexport const userPortfolioThunks = {\n  fetchUserPortfolio\n  // ... other thunks\n};","map":{"version":3,"names":["createAsyncThunk","fetchPortfolioData","fetchUserPortfolio","token","thunkAPI","console","log","response","error","rejectWithValue","message","data","userPortfolioThunks"],"sources":["/app/src/components/UserPortfolio/userPortfolioThunks.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchPortfolioData } from './services/portfolioService';\n\nexport const fetchUserPortfolio = createAsyncThunk(\n    'userPortfolio/fetchUserPortfolio',\n    async (token, thunkAPI) => {\n      console.log('fetchUserPortfolio thunk called with token:', token);\n      try {\n        const response = await fetchPortfolioData(token);\n        console.log('fetchUserPortfolio response:', response);\n        return response; // Assuming the response is the data object itself\n      } catch (error) {\n        console.error('fetchUserPortfolio error:', error);\n        if (!error.response) {\n          // Handle errors without a response (network errors, timeouts, etc.)\n          return thunkAPI.rejectWithValue({ message: error.message || 'An unknown error occurred' });\n        }\n        // Handle HTTP errors\n        return thunkAPI.rejectWithValue(error.response.data);\n      }\n    }\n  );\n\n// Export your thunks as needed\nexport const userPortfolioThunks = {\n  fetchUserPortfolio,\n  // ... other thunks\n};\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,kBAAkB,QAAQ,6BAA6B;AAEhE,OAAO,MAAMC,kBAAkB,GAAGF,gBAAgB,CAC9C,kCAAkC,EAClC,OAAOG,KAAK,EAAEC,QAAQ,KAAK;EACzBC,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEH,KAAK,CAAC;EACjE,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMN,kBAAkB,CAACE,KAAK,CAAC;IAChDE,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEC,QAAQ,CAAC;IACrD,OAAOA,QAAQ,CAAC,CAAC;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,IAAI,CAACA,KAAK,CAACD,QAAQ,EAAE;MACnB;MACA,OAAOH,QAAQ,CAACK,eAAe,CAAC;QAAEC,OAAO,EAAEF,KAAK,CAACE,OAAO,IAAI;MAA4B,CAAC,CAAC;IAC5F;IACA;IACA,OAAON,QAAQ,CAACK,eAAe,CAACD,KAAK,CAACD,QAAQ,CAACI,IAAI,CAAC;EACtD;AACF,CACF,CAAC;;AAEH;AACA,OAAO,MAAMC,mBAAmB,GAAG;EACjCV;EACA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}