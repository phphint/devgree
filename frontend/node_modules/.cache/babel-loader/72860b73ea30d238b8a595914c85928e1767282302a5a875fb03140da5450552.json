{"ast":null,"code":"var _jsxFileName = \"/app/src/components/UserDashboard/Education/EditEducationForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { editEducation } from '../dashboardThunks'; // Import the editEducation thunk\n\n// Validation Schema\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EducationSchema = Yup.object().shape({\n  institution: Yup.string().required('Institution is required'),\n  degree: Yup.string().required('Degree is required'),\n  fieldOfStudy: Yup.string().required('Field of study is required'),\n  startDate: Yup.date().required('Start date is required'),\n  endDate: Yup.date(),\n  description: Yup.string()\n});\nconst EditEducationForm = ({\n  initialData,\n  itemId\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      institution: initialData.institution || '',\n      degree: initialData.degree || '',\n      fieldOfStudy: initialData.fieldOfStudy || '',\n      startDate: initialData.startDate || '',\n      endDate: initialData.endDate || '',\n      description: initialData.description || ''\n    },\n    validationSchema: EducationSchema,\n    onSubmit: values => {\n      // Dispatch the editEducation thunk with the item ID and new data\n      dispatch(editEducation({\n        itemId,\n        newData: values\n      }));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"institution\",\n      onChange: formik.handleChange,\n      value: formik.values.institution,\n      placeholder: \"Institution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), formik.touched.institution && formik.errors.institution ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.institution\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(EditEducationForm, \"snIeeAJX6ddd+yTscBhJ9TqRTSM=\", false, function () {\n  return [useDispatch, useFormik];\n});\n_c = EditEducationForm;\nexport default EditEducationForm;\nvar _c;\n$RefreshReg$(_c, \"EditEducationForm\");","map":{"version":3,"names":["React","useFormik","Yup","useDispatch","editEducation","jsxDEV","_jsxDEV","EducationSchema","object","shape","institution","string","required","degree","fieldOfStudy","startDate","date","endDate","description","EditEducationForm","initialData","itemId","_s","dispatch","formik","initialValues","validationSchema","onSubmit","values","newData","handleSubmit","children","type","name","onChange","handleChange","value","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","touched","errors","_c","$RefreshReg$"],"sources":["/app/src/components/UserDashboard/Education/EditEducationForm.js"],"sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { editEducation } from '../dashboardThunks'; // Import the editEducation thunk\n\n// Validation Schema\nconst EducationSchema = Yup.object().shape({\n  institution: Yup.string().required('Institution is required'),\n  degree: Yup.string().required('Degree is required'),\n  fieldOfStudy: Yup.string().required('Field of study is required'),\n  startDate: Yup.date().required('Start date is required'),\n  endDate: Yup.date(),\n  description: Yup.string()\n});\n\nconst EditEducationForm = ({ initialData, itemId }) => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      institution: initialData.institution || '',\n      degree: initialData.degree || '',\n      fieldOfStudy: initialData.fieldOfStudy || '',\n      startDate: initialData.startDate || '',\n      endDate: initialData.endDate || '',\n      description: initialData.description || ''\n    },\n    validationSchema: EducationSchema,\n    onSubmit: (values) => {\n      // Dispatch the editEducation thunk with the item ID and new data\n      dispatch(editEducation({ itemId, newData: values }));\n    }\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      {/* Form inputs for institution, degree, fieldOfStudy, startDate, endDate, description */}\n      {/* Each input should have onChange and value linked to formik, similar to the institution input below */}\n      <input \n        type=\"text\"\n        name=\"institution\"\n        onChange={formik.handleChange}\n        value={formik.values.institution}\n        placeholder=\"Institution\"\n      />\n      {/* Error Message for institution */}\n      {formik.touched.institution && formik.errors.institution ? (\n        <div>{formik.errors.institution}</div>\n      ) : null}\n\n      {/* Other input fields and error messages */}\n      \n      <button type=\"submit\">Save Changes</button>\n    </form>\n  );\n};\n\nexport default EditEducationForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}