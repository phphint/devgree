{"ast":null,"code":"var _jsxFileName = \"/app/src/components/UserPortfolio/UserPortfolioContainer.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userPortfolioThunks } from './userPortfolioThunks';\nimport UserPortfolioView from './UserPortfolioView'; // Import UserPortfolioView\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPortfolioContainer = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // This is the UUID from the URL\n  const dispatch = useDispatch();\n  const portfolioData = useSelector(state => state.userPortfolio.data); // Get the portfolio data from Redux store\n  const token = useSelector(state => state.auth.token); // Get the auth token from Redux store\n\n  useEffect(() => {\n    if (id) {\n      // Dispatch the thunk to fetch portfolio data with the UUID and token\n      dispatch(userPortfolioThunks.fetchUserPortfolio({\n        identifier: id,\n        token\n      }));\n    }\n  }, [id, token, dispatch]);\n\n  // Render UserPortfolioView and pass the portfolioData as a prop\n  return /*#__PURE__*/_jsxDEV(UserPortfolioView, {\n    portfolioData: portfolioData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPortfolioContainer, \"1r1dccv8q690SxmJ9cTnHTgegUA=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector];\n});\n_c = UserPortfolioContainer;\nexport default UserPortfolioContainer;\nvar _c;\n$RefreshReg$(_c, \"UserPortfolioContainer\");","map":{"version":3,"names":["useEffect","useParams","useDispatch","useSelector","userPortfolioThunks","UserPortfolioView","jsxDEV","_jsxDEV","UserPortfolioContainer","_s","id","dispatch","portfolioData","state","userPortfolio","data","token","auth","fetchUserPortfolio","identifier","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/components/UserPortfolio/UserPortfolioContainer.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userPortfolioThunks } from './userPortfolioThunks';\nimport UserPortfolioView from './UserPortfolioView'; // Import UserPortfolioView\n\nconst UserPortfolioContainer = () => {\n  const { id } = useParams(); // This is the UUID from the URL\n  const dispatch = useDispatch();\n  const portfolioData = useSelector((state) => state.userPortfolio.data); // Get the portfolio data from Redux store\n  const token = useSelector((state) => state.auth.token); // Get the auth token from Redux store\n\n  useEffect(() => {\n    if (id) {\n      // Dispatch the thunk to fetch portfolio data with the UUID and token\n      dispatch(userPortfolioThunks.fetchUserPortfolio({ identifier: id, token }));\n    }\n  }, [id, token, dispatch]);\n\n  // Render UserPortfolioView and pass the portfolioData as a prop\n  return (\n    <UserPortfolioView portfolioData={portfolioData} />\n  );\n};\n\nexport default UserPortfolioContainer;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,OAAOC,iBAAiB,MAAM,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,aAAa,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,aAAa,CAACC,IAAI,CAAC,CAAC,CAAC;EACxE,MAAMC,KAAK,GAAGb,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACI,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC;;EAExDhB,SAAS,CAAC,MAAM;IACd,IAAIU,EAAE,EAAE;MACN;MACAC,QAAQ,CAACP,mBAAmB,CAACc,kBAAkB,CAAC;QAAEC,UAAU,EAAET,EAAE;QAAEM;MAAM,CAAC,CAAC,CAAC;IAC7E;EACF,CAAC,EAAE,CAACN,EAAE,EAAEM,KAAK,EAAEL,QAAQ,CAAC,CAAC;;EAEzB;EACA,oBACEJ,OAAA,CAACF,iBAAiB;IAACO,aAAa,EAAEA;EAAc;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEvD,CAAC;AAACd,EAAA,CAjBID,sBAAsB;EAAA,QACXP,SAAS,EACPC,WAAW,EACNC,WAAW,EACnBA,WAAW;AAAA;AAAAqB,EAAA,GAJrBhB,sBAAsB;AAmB5B,eAAeA,sBAAsB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}