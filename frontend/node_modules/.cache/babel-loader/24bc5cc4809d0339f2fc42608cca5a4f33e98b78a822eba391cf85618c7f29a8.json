{"ast":null,"code":"// userportfoliocontainer.js\nimport{useEffect}from'react';import{useParams}from'react-router-dom';import{useDispatch,useSelector}from'react-redux';import{userPortfolioThunks}from'./userPortfolioThunks';import UserPortfolioView from'./UserPortfolioView';// Import UserPortfolioView\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var UserPortfolioContainer=function UserPortfolioContainer(){var _useParams=useParams(),id=_useParams.id;// This is the UUID from the URL\nvar dispatch=useDispatch();var portfolioData=useSelector(function(state){return state.userPortfolio.data;});// Get the portfolio data from Redux store\nvar token=useSelector(function(state){return state.auth.token;});// Get the auth token from Redux store\nuseEffect(function(){if(id){// Dispatch the thunk to fetch portfolio data with the UUID and token\ndispatch(userPortfolioThunks.fetchUserPortfolio({identifier:id,token:token}));}},[id,token,dispatch]);// Render UserPortfolioView and pass the portfolioData as a prop\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(UserPortfolioView,{portfolioData:portfolioData})});};export default UserPortfolioContainer;","map":{"version":3,"names":["useEffect","useParams","useDispatch","useSelector","userPortfolioThunks","UserPortfolioView","jsx","_jsx","Fragment","_Fragment","UserPortfolioContainer","_useParams","id","dispatch","portfolioData","state","userPortfolio","data","token","auth","fetchUserPortfolio","identifier","children"],"sources":["/app/src/components/UserPortfolio/UserPortfolioContainer.js"],"sourcesContent":["// userportfoliocontainer.js\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userPortfolioThunks } from './userPortfolioThunks';\nimport UserPortfolioView from './UserPortfolioView'; // Import UserPortfolioView\n\n\nconst UserPortfolioContainer = () => {\n  const { id } = useParams(); // This is the UUID from the URL\n  const dispatch = useDispatch();\n  const portfolioData = useSelector((state) => state.userPortfolio.data); // Get the portfolio data from Redux store\n  const token = useSelector((state) => state.auth.token); // Get the auth token from Redux store\n \n\n  useEffect(() => {\n    if (id) {\n      // Dispatch the thunk to fetch portfolio data with the UUID and token\n      dispatch(userPortfolioThunks.fetchUserPortfolio({ identifier: id, token }));\n    }\n  }, [id, token, dispatch]);\n\n  // Render UserPortfolioView and pass the portfolioData as a prop\n  return (\n    <>\n\n    <UserPortfolioView portfolioData={portfolioData} />\n</>\n  );\n};\n\nexport default UserPortfolioContainer;\n"],"mappings":"AAAA;AACA,OAASA,SAAS,KAAQ,OAAO,CACjC,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,mBAAmB,KAAQ,uBAAuB,CAC3D,MAAO,CAAAC,iBAAiB,KAAM,qBAAqB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAGrD,GAAM,CAAAC,sBAAsB,CAAG,QAAzB,CAAAA,sBAAsBA,CAAA,CAAS,CACnC,IAAAC,UAAA,CAAeV,SAAS,CAAC,CAAC,CAAlBW,EAAE,CAAAD,UAAA,CAAFC,EAAE,CAAkB;AAC5B,GAAM,CAAAC,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAC9B,GAAM,CAAAY,aAAa,CAAGX,WAAW,CAAC,SAACY,KAAK,QAAK,CAAAA,KAAK,CAACC,aAAa,CAACC,IAAI,GAAC,CAAE;AACxE,GAAM,CAAAC,KAAK,CAAGf,WAAW,CAAC,SAACY,KAAK,QAAK,CAAAA,KAAK,CAACI,IAAI,CAACD,KAAK,GAAC,CAAE;AAGxDlB,SAAS,CAAC,UAAM,CACd,GAAIY,EAAE,CAAE,CACN;AACAC,QAAQ,CAACT,mBAAmB,CAACgB,kBAAkB,CAAC,CAAEC,UAAU,CAAET,EAAE,CAAEM,KAAK,CAALA,KAAM,CAAC,CAAC,CAAC,CAC7E,CACF,CAAC,CAAE,CAACN,EAAE,CAAEM,KAAK,CAAEL,QAAQ,CAAC,CAAC,CAEzB;AACA,mBACEN,IAAA,CAAAE,SAAA,EAAAa,QAAA,cAEAf,IAAA,CAACF,iBAAiB,EAACS,aAAa,CAAEA,aAAc,CAAE,CAAC,CACrD,CAAC,CAEH,CAAC,CAED,cAAe,CAAAJ,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}