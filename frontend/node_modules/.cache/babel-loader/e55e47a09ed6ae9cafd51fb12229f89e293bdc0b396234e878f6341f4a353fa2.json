{"ast":null,"code":"var _jsxFileName = \"/app/src/components/UserDashboard/Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { updateSettings } from \"./dashboardThunks\"; // Create this thunk for updating settings\nimport TopNav from \"./TopNav/index\";\nimport SideNav from \"./SideNav\";\nimport Footer from \"../Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SettingsSchema = Yup.object().shape({\n  privacy: Yup.string().required(\"Privacy setting is required\"),\n  notifications: Yup.boolean(),\n  profileSlug: Yup.string()\n  // Add other fields as necessary\n});\n\nconst Settings = () => {\n  _s();\n  const dispatch = useDispatch();\n  const settings = useSelector(state => state.dashboard.settings) || {}; // Add a fallback to an empty object\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const formik = useFormik({\n    initialValues: {\n      privacy: settings.privacy || \"private\",\n      notifications: settings.notifications || false,\n      profileSlug: settings.profileSlug || \"\"\n      // Initialize other fields if necessary\n    },\n\n    validationSchema: SettingsSchema,\n    onSubmit: async values => {\n      setIsSubmitting(true);\n      setSuccessMessage(\"\");\n      setErrorMessage(\"\");\n      try {\n        await dispatch(updateSettings(values)).unwrap(); // Assuming updateSettings is an async thunk\n        setSuccessMessage(\"Settings updated successfully!\");\n      } catch (error) {\n        setErrorMessage(\"Failed to update settings. Please try again.\");\n      } finally {\n        setIsSubmitting(false);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(SideNav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"col-md-9 ms-sm-auto col-lg-10 px-md-4 bg-white text-dark\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-success\",\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: formik.handleSubmit,\n            className: \"container mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"privacy\",\n                className: \"form-label\",\n                children: \"Privacy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"privacy\",\n                name: \"privacy\",\n                onChange: formik.handleChange,\n                value: formik.values.privacy,\n                className: \"form-control\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"public\",\n                  children: \"Public\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"private\",\n                  children: \"Private\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3 form-check\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: \"notifications\",\n                name: \"notifications\",\n                onChange: formik.handleChange,\n                checked: formik.values.notifications,\n                className: \"form-check-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"notifications\",\n                className: \"form-check-label\",\n                children: \"Enable Notifications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"profileSlug\",\n                className: \"form-label\",\n                children: \"Profile Slug\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"profileSlug\",\n                name: \"profileSlug\",\n                onChange: formik.handleChange,\n                value: formik.values.profileSlug,\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              disabled: isSubmitting,\n              children: isSubmitting ? \"Saving...\" : \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Settings, \"2WwiJI7IZBv3pQ/jdVFyVgIEZv8=\", false, function () {\n  return [useDispatch, useSelector, useFormik];\n});\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","useFormik","Yup","updateSettings","TopNav","SideNav","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","SettingsSchema","object","shape","privacy","string","required","notifications","boolean","profileSlug","Settings","_s","dispatch","settings","state","dashboard","isSubmitting","setIsSubmitting","successMessage","setSuccessMessage","errorMessage","setErrorMessage","formik","initialValues","validationSchema","onSubmit","values","unwrap","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","handleSubmit","htmlFor","id","name","onChange","handleChange","value","type","checked","disabled","_c","$RefreshReg$"],"sources":["/app/src/components/UserDashboard/Settings.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { updateSettings } from \"./dashboardThunks\"; // Create this thunk for updating settings\nimport TopNav from \"./TopNav/index\";\nimport SideNav from \"./SideNav\";\nimport Footer from \"../Footer\";\n\nconst SettingsSchema = Yup.object().shape({\n  privacy: Yup.string().required(\"Privacy setting is required\"),\n  notifications: Yup.boolean(),\n  profileSlug: Yup.string(),\n  // Add other fields as necessary\n});\n\nconst Settings = () => {\n  const dispatch = useDispatch();\n  const settings = useSelector((state) => state.dashboard.settings) || {}; // Add a fallback to an empty object\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const formik = useFormik({\n    initialValues: {\n      privacy: settings.privacy || \"private\",\n      notifications: settings.notifications || false,\n      profileSlug: settings.profileSlug || \"\",\n      // Initialize other fields if necessary\n    },\n    validationSchema: SettingsSchema,\n    onSubmit: async (values) => {\n      setIsSubmitting(true);\n      setSuccessMessage(\"\");\n      setErrorMessage(\"\");\n\n      try {\n        await dispatch(updateSettings(values)).unwrap(); // Assuming updateSettings is an async thunk\n        setSuccessMessage(\"Settings updated successfully!\");\n      } catch (error) {\n        setErrorMessage(\"Failed to update settings. Please try again.\");\n      } finally {\n        setIsSubmitting(false);\n      }\n    },\n  });\n\n  return (\n    <>\n      <TopNav />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <SideNav />\n          <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4 bg-white text-dark\">\n            <h1>Settings</h1>\n            {successMessage && (\n              <div className=\"alert alert-success\">{successMessage}</div>\n            )}\n            {errorMessage && (\n              <div className=\"alert alert-danger\">{errorMessage}</div>\n            )}\n\n            <form onSubmit={formik.handleSubmit} className=\"container mt-3\">\n              {/* Privacy Setting */}\n              <div className=\"mb-3\">\n                <label htmlFor=\"privacy\" className=\"form-label\">\n                  Privacy\n                </label>\n                <select\n                  id=\"privacy\"\n                  name=\"privacy\"\n                  onChange={formik.handleChange}\n                  value={formik.values.privacy}\n                  className=\"form-control\"\n                >\n                  <option value=\"public\">Public</option>\n                  <option value=\"private\">Private</option>\n                </select>\n              </div>\n\n              {/* Notifications Setting */}\n              <div className=\"mb-3 form-check\">\n                <input\n                  type=\"checkbox\"\n                  id=\"notifications\"\n                  name=\"notifications\"\n                  onChange={formik.handleChange}\n                  checked={formik.values.notifications}\n                  className=\"form-check-input\"\n                />\n                <label htmlFor=\"notifications\" className=\"form-check-label\">\n                  Enable Notifications\n                </label>\n              </div>\n\n              {/* Profile Slug */}\n              <div className=\"mb-3\">\n                <label htmlFor=\"profileSlug\" className=\"form-label\">\n                  Profile Slug\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"profileSlug\"\n                  name=\"profileSlug\"\n                  onChange={formik.handleChange}\n                  value={formik.values.profileSlug}\n                  className=\"form-control\"\n                />\n              </div>\n\n              {/* Add other fields as necessary */}\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                disabled={isSubmitting}\n              >\n                {isSubmitting ? \"Saving...\" : \"Save Changes\"}\n              </button>\n            </form>\n          </main>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default Settings;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}