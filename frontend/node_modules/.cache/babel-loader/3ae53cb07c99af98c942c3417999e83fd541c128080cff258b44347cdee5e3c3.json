{"ast":null,"code":"//dashboardSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  isPrivate: false,\n  email: '',\n  dateJoined: '',\n  profile: {\n    fullName: '',\n    profilePicture: '',\n    bio: '',\n    roleTitle: '',\n    location: '',\n    phone: '',\n    videoIntro: {\n      platform: ''\n    },\n    achievements: []\n  },\n  skillsAssessment: {\n    quizzesTaken: []\n  },\n  testimonials: [],\n  analytics: {\n    visitorDemographics: []\n  },\n  repositories: [],\n  resume: {\n    education: [],\n    workExperience: [],\n    skills: [],\n    projects: [],\n    certifications: [],\n    languages: []\n  }\n};\nexport const dashboardSlice = createSlice({\n  name: 'dashboard',\n  initialState,\n  reducers: {\n    setUser: (state, action) => {\n      return {\n        ...state,\n        ...action.payload\n      };\n    },\n    updateProfile: (state, action) => {\n      state.profile = {\n        ...state.profile,\n        ...action.payload\n      };\n    },\n    updateSkillsAssessment: (state, action) => {\n      state.skillsAssessment = {\n        ...state.skillsAssessment,\n        ...action.payload\n      };\n    },\n    updateTestimonials: (state, action) => {\n      state.testimonials = [...action.payload]; // Assuming action.payload is an array of testimonials\n    },\n\n    updateRepositories: (state, action) => {\n      state.repositories = [...action.payload]; // Assuming action.payload is an array of repositories\n    },\n\n    updateResume: (state, action) => {\n      state.resume = {\n        ...state.resume,\n        ...action.payload\n      };\n    }\n    // Add other reducers as necessary\n  }\n});\n\nexport const {\n  setUser,\n  updateProfile,\n  updateSkillsAssessment,\n  updateTestimonials,\n  updateRepositories,\n  updateResume\n} = dashboardSlice.actions;\nexport default dashboardSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isPrivate","email","dateJoined","profile","fullName","profilePicture","bio","roleTitle","location","phone","videoIntro","platform","achievements","skillsAssessment","quizzesTaken","testimonials","analytics","visitorDemographics","repositories","resume","education","workExperience","skills","projects","certifications","languages","dashboardSlice","name","reducers","setUser","state","action","payload","updateProfile","updateSkillsAssessment","updateTestimonials","updateRepositories","updateResume","actions","reducer"],"sources":["/app/src/reducers/dashboardSlice.js"],"sourcesContent":["//dashboardSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  isPrivate: false,\n  email: '',\n  dateJoined: '',\n  profile: {\n    fullName: '',\n    profilePicture: '',\n    bio: '',\n    roleTitle: '',\n    location: '',\n    phone: '',\n    videoIntro: {\n      platform: ''\n    },\n    achievements: []\n  },\n  skillsAssessment: {\n    quizzesTaken: []\n  },\n  testimonials: [],\n  analytics: {\n    visitorDemographics: []\n  },\n  repositories: [],\n  resume: {\n    education: [],\n    workExperience: [],\n    skills: [],\n    projects: [],\n    certifications: [],\n    languages: []\n  }\n};\n\nexport const dashboardSlice = createSlice({\n    name: 'dashboard',\n    initialState,\n    reducers: {\n      setUser: (state, action) => {\n        return { ...state, ...action.payload };\n      },\n      updateProfile: (state, action) => {\n        state.profile = { ...state.profile, ...action.payload };\n      },\n      updateSkillsAssessment: (state, action) => {\n        state.skillsAssessment = { ...state.skillsAssessment, ...action.payload };\n      },\n      updateTestimonials: (state, action) => {\n        state.testimonials = [...action.payload]; // Assuming action.payload is an array of testimonials\n      },\n      updateRepositories: (state, action) => {\n        state.repositories = [...action.payload]; // Assuming action.payload is an array of repositories\n      },\n      updateResume: (state, action) => {\n        state.resume = { ...state.resume, ...action.payload };\n      },\n      // Add other reducers as necessary\n    },\n  });\n  \n  export const { \n    setUser, \n    updateProfile, \n    updateSkillsAssessment, \n    updateTestimonials, \n    updateRepositories, \n    updateResume \n  } = dashboardSlice.actions;\n  \n  export default dashboardSlice.reducer;\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE,EAAE;EACdC,OAAO,EAAE;IACPC,QAAQ,EAAE,EAAE;IACZC,cAAc,EAAE,EAAE;IAClBC,GAAG,EAAE,EAAE;IACPC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,UAAU,EAAE;MACVC,QAAQ,EAAE;IACZ,CAAC;IACDC,YAAY,EAAE;EAChB,CAAC;EACDC,gBAAgB,EAAE;IAChBC,YAAY,EAAE;EAChB,CAAC;EACDC,YAAY,EAAE,EAAE;EAChBC,SAAS,EAAE;IACTC,mBAAmB,EAAE;EACvB,CAAC;EACDC,YAAY,EAAE,EAAE;EAChBC,MAAM,EAAE;IACNC,SAAS,EAAE,EAAE;IACbC,cAAc,EAAE,EAAE;IAClBC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,cAAc,EAAE,EAAE;IAClBC,SAAS,EAAE;EACb;AACF,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG5B,WAAW,CAAC;EACtC6B,IAAI,EAAE,WAAW;EACjB5B,YAAY;EACZ6B,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,OAAO;QAAE,GAAGD,KAAK;QAAE,GAAGC,MAAM,CAACC;MAAQ,CAAC;IACxC,CAAC;IACDC,aAAa,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAAC3B,OAAO,GAAG;QAAE,GAAG2B,KAAK,CAAC3B,OAAO;QAAE,GAAG4B,MAAM,CAACC;MAAQ,CAAC;IACzD,CAAC;IACDE,sBAAsB,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACzCD,KAAK,CAACjB,gBAAgB,GAAG;QAAE,GAAGiB,KAAK,CAACjB,gBAAgB;QAAE,GAAGkB,MAAM,CAACC;MAAQ,CAAC;IAC3E,CAAC;IACDG,kBAAkB,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MACrCD,KAAK,CAACf,YAAY,GAAG,CAAC,GAAGgB,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;IAC5C,CAAC;;IACDI,kBAAkB,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MACrCD,KAAK,CAACZ,YAAY,GAAG,CAAC,GAAGa,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;IAC5C,CAAC;;IACDK,YAAY,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACX,MAAM,GAAG;QAAE,GAAGW,KAAK,CAACX,MAAM;QAAE,GAAGY,MAAM,CAACC;MAAQ,CAAC;IACvD;IACA;EACF;AACF,CAAC,CAAC;;AAEF,OAAO,MAAM;EACXH,OAAO;EACPI,aAAa;EACbC,sBAAsB;EACtBC,kBAAkB;EAClBC,kBAAkB;EAClBC;AACF,CAAC,GAAGX,cAAc,CAACY,OAAO;AAE1B,eAAeZ,cAAc,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}