{"ast":null,"code":"import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport authReducer from '../reducers/authSlice';\nimport uiReducer from '../reducers/uiSlice';\nimport userPortfolioReducer from '../reducers/userPortfolioSlice';\nimport dashboardReducer from '../reducers/dashboardSlice';\nconst persistConfig = {\n  key: 'root',\n  storage\n  // Add other configurations if needed\n};\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  ui: uiReducer,\n  userPortfolio: userPortfolioReducer,\n  dashboard: dashboardReducer // Adding the dashboard reducer\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE', 'persist/REGISTER']\n    }\n  })\n  // Add any other middleware or enhancers if needed\n});\n\nexport const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","persistStore","persistReducer","storage","authReducer","uiReducer","userPortfolioReducer","dashboardReducer","persistConfig","key","rootReducer","auth","ui","userPortfolio","dashboard","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/app/src/store/store.js"],"sourcesContent":["import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport authReducer from '../reducers/authSlice';\nimport uiReducer from '../reducers/uiSlice';\nimport userPortfolioReducer from '../reducers/userPortfolioSlice';\nimport dashboardReducer from '../reducers/dashboardSlice';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  // Add other configurations if needed\n};\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  ui: uiReducer,\n  userPortfolio: userPortfolioReducer,\n  dashboard: dashboardReducer, // Adding the dashboard reducer\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE', 'persist/REGISTER'],\n      },\n    }),\n  // Add any other middleware or enhancers if needed\n});\n\nexport const persistor = persistStore(store);\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,eAAe,QAAQ,kBAAkB;AAClE,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B,CAAC,CAAC;AACjD,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,oBAAoB,MAAM,gCAAgC;AACjE,OAAOC,gBAAgB,MAAM,4BAA4B;AAEzD,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXN;EACA;AACF,CAAC;;AAED,MAAMO,WAAW,GAAGV,eAAe,CAAC;EAClCW,IAAI,EAAEP,WAAW;EACjBQ,EAAE,EAAEP,SAAS;EACbQ,aAAa,EAAEP,oBAAoB;EACnCQ,SAAS,EAAEP,gBAAgB,CAAE;AAC/B,CAAC,CAAC;;AAEF,MAAMQ,gBAAgB,GAAGb,cAAc,CAACM,aAAa,EAAEE,WAAW,CAAC;AAEnE,OAAO,MAAMM,KAAK,GAAGjB,cAAc,CAAC;EAClCkB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAC,iBAAiB,EAAE,mBAAmB,EAAE,kBAAkB;IAC7E;EACF,CAAC;EACH;AACF,CAAC,CAAC;;AAEF,OAAO,MAAMC,SAAS,GAAGrB,YAAY,CAACe,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}