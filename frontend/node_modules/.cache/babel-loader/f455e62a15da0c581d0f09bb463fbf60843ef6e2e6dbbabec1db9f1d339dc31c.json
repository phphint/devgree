{"ast":null,"code":"//dashboardSlice.js\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  email: \"\",\n  profile: {\n    fullName: \"\",\n    profilePicture: \"\",\n    bio: \"\",\n    roleTitle: \"\",\n    location: \"\",\n    phone: \"\",\n    videoIntro: {\n      platform: \"\"\n    },\n    achievements: []\n  },\n  skillsAssessment: {\n    quizzesTaken: []\n  },\n  testimonials: [],\n  analytics: {\n    visitorDemographics: []\n  },\n  repositories: [],\n  resume: {\n    education: [],\n    workExperience: [],\n    skills: [],\n    projects: [],\n    certifications: [],\n    languages: []\n  }\n};\nexport const dashboardSlice = createSlice({\n  name: \"dashboard\",\n  initialState,\n  reducers: {\n    // Reducer for setting the entire dashboard data\n    setDashboardData: (state, action) => {\n      return {\n        ...state,\n        ...action.payload\n      };\n    },\n    setUser: (state, action) => {\n      return {\n        ...state,\n        ...action.payload\n      };\n    },\n    updateResume: (state, action) => {\n      state.resume = {\n        ...state.resume,\n        ...action.payload\n      };\n    },\n    // Generic Reducer for updating an item by ID in any section\n    updateItemById: (state, action) => {\n      const {\n        section,\n        _id,\n        newData\n      } = action.payload;\n      const index = state.resume[section].findIndex(item => item._id === _id);\n      if (index !== -1) {\n        state.resume[section][index] = {\n          ...state.resume[section][index],\n          ...newData\n        };\n      }\n    },\n    // Generic Reducer for appending a new item in any section\n    appendNewItem: (state, action) => {\n      const {\n        section,\n        data\n      } = action.payload;\n\n      // Handle sections directly under the state\n      if (section === \"email\" || section === \"profile\" || section === \"skillsAssessment\" || section === \"testimonials\" || section === \"analytics\" || section === \"repositories\") {\n        if (Array.isArray(state[section])) {\n          state[section].push(data); // For array sections like testimonials and repositories\n        } else {\n          state[section] = {\n            ...state[section],\n            ...data\n          }; // For object sections like profile\n        }\n      }\n      // Handle sections under 'resume'\n      else if (state.resume && state.resume.hasOwnProperty(section)) {\n        state.resume[section].push(data);\n      } else {\n        console.error(`Section ${section} not found in state`);\n      }\n    },\n    // Generic Reducer for removing an item by ID in any section\n    removeItemById: (state, action) => {\n      const {\n        section,\n        itemId\n      } = action.payload;\n\n      // Handle sections directly under the state\n      if (section === \"testimonials\" || section === \"analytics\" || section === \"repositories\") {\n        state[section] = state[section].filter(item => item._id !== itemId);\n      }\n      // Handle sections under 'resume'\n      else if (state.resume && state.resume.hasOwnProperty(section)) {\n        state.resume[section] = state.resume[section].filter(item => item._id !== itemId);\n      } else {\n        console.error(`Section ${section} not found in state for removal`);\n      }\n    }\n  }\n});\nexport const {\n  setUser,\n  setDashboardData,\n  updateItemById,\n  appendNewItem,\n  removeItemById\n} = dashboardSlice.actions;\nexport default dashboardSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","email","profile","fullName","profilePicture","bio","roleTitle","location","phone","videoIntro","platform","achievements","skillsAssessment","quizzesTaken","testimonials","analytics","visitorDemographics","repositories","resume","education","workExperience","skills","projects","certifications","languages","dashboardSlice","name","reducers","setDashboardData","state","action","payload","setUser","updateResume","updateItemById","section","_id","newData","index","findIndex","item","appendNewItem","data","Array","isArray","push","hasOwnProperty","console","error","removeItemById","itemId","filter","actions","reducer"],"sources":["/app/src/reducers/dashboardSlice.js"],"sourcesContent":["//dashboardSlice.js\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  email: \"\",\n  profile: {\n    fullName: \"\",\n    profilePicture: \"\",\n    bio: \"\",\n    roleTitle: \"\",\n    location: \"\",\n    phone: \"\",\n    videoIntro: {\n      platform: \"\",\n    },\n    achievements: [],\n  },\n  skillsAssessment: {\n    quizzesTaken: [],\n  },\n  testimonials: [],\n  analytics: {\n    visitorDemographics: [],\n  },\n  repositories: [],\n  resume: {\n    education: [],\n    workExperience: [],\n    skills: [],\n    projects: [],\n    certifications: [],\n    languages: [],\n  },\n};\n\nexport const dashboardSlice = createSlice({\n  name: \"dashboard\",\n  initialState,\n  reducers: {\n    // Reducer for setting the entire dashboard data\n    setDashboardData: (state, action) => {\n      return { ...state, ...action.payload };\n    },\n    setUser: (state, action) => {\n      return { ...state, ...action.payload };\n    },\n\n    updateResume: (state, action) => {\n      state.resume = { ...state.resume, ...action.payload };\n    },\n\n    // Generic Reducer for updating an item by ID in any section\n    updateItemById: (state, action) => {\n      const { section, _id, newData } = action.payload;\n      const index = state.resume[section].findIndex((item) => item._id === _id);\n      if (index !== -1) {\n        state.resume[section][index] = {\n          ...state.resume[section][index],\n          ...newData,\n        };\n      }\n    },\n\n    // Generic Reducer for appending a new item in any section\n    appendNewItem: (state, action) => {\n      const { section, data } = action.payload;\n\n      // Handle sections directly under the state\n      if (\n        section === \"email\" ||\n        section === \"profile\" ||\n        section === \"skillsAssessment\" ||\n        section === \"testimonials\" ||\n        section === \"analytics\" ||\n        section === \"repositories\"\n      ) {\n        if (Array.isArray(state[section])) {\n          state[section].push(data); // For array sections like testimonials and repositories\n        } else {\n          state[section] = { ...state[section], ...data }; // For object sections like profile\n        }\n      }\n      // Handle sections under 'resume'\n      else if (state.resume && state.resume.hasOwnProperty(section)) {\n        state.resume[section].push(data);\n      } else {\n        console.error(`Section ${section} not found in state`);\n      }\n    },\n\n    // Generic Reducer for removing an item by ID in any section\n    removeItemById: (state, action) => {\n      const { section, itemId } = action.payload;\n\n      // Handle sections directly under the state\n      if (\n        section === \"testimonials\" ||\n        section === \"analytics\" ||\n        section === \"repositories\"\n      ) {\n        state[section] = state[section].filter((item) => item._id !== itemId);\n      }\n      // Handle sections under 'resume'\n      else if (state.resume && state.resume.hasOwnProperty(section)) {\n        state.resume[section] = state.resume[section].filter(\n          (item) => item._id !== itemId\n        );\n      } else {\n        console.error(`Section ${section} not found in state for removal`);\n      }\n    },\n  },\n});\n\nexport const {\n  setUser,\n  setDashboardData,\n  updateItemById,\n  appendNewItem,\n  removeItemById,\n} = dashboardSlice.actions;\n\nexport default dashboardSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}