{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isLoggedIn: false,\n  token: null,\n  userId: null,\n  fullName: \"\",\n  profilePicture: \"\",\n  email: \"\",\n  // Adding new fields to the initial state\n  bio: \"\",\n  roleTitle: \"\",\n  location: \"\",\n  phone: \"\",\n  videoIntro: {\n    platform: \"\",\n    url: \"\"\n  }\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      // Assuming action.payload contains token, userId, fullName, profilePicture, and email\n      const {\n        token,\n        userId,\n        fullName,\n        profilePicture,\n        email\n      } = action.payload;\n      localStorage.setItem(\"authToken\", token);\n      state.token = token;\n      state.userId = userId;\n      state.fullName = fullName;\n      state.profilePicture = profilePicture;\n      state.email = email;\n      state.isLoggedIn = true;\n    },\n    logout: state => {\n      localStorage.removeItem(\"authToken\");\n      state.token = null;\n      state.userId = null;\n      state.fullName = \"\";\n      state.profilePicture = \"\";\n      state.email = \"\";\n      state.isLoggedIn = false;\n      // Reset additional fields\n      state.bio = \"\";\n      state.roleTitle = \"\";\n      state.location = \"\";\n      state.phone = \"\";\n      state.videoIntro = {\n        platform: \"\",\n        url: \"\"\n      };\n    },\n    updateProfile: (state, action) => {\n      const {\n        fullName,\n        profilePicture,\n        bio,\n        roleTitle,\n        location,\n        phone,\n        videoIntro\n      } = action.payload;\n      state.fullName = fullName !== null && fullName !== void 0 ? fullName : state.fullName;\n      if (profilePicture) {\n        state.profilePicture = profilePicture;\n      }\n      state.bio = bio !== null && bio !== void 0 ? bio : state.bio;\n      state.roleTitle = roleTitle !== null && roleTitle !== void 0 ? roleTitle : state.roleTitle;\n      state.location = location !== null && location !== void 0 ? location : state.location;\n      state.phone = phone !== null && phone !== void 0 ? phone : state.phone;\n      state.videoIntro = videoIntro !== null && videoIntro !== void 0 ? videoIntro : state.videoIntro;\n    }\n    // ... potentially other reducers ...\n  }\n});\n\nexport const {\n  login,\n  logout,\n  updateProfile\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isLoggedIn","token","userId","fullName","profilePicture","email","bio","roleTitle","location","phone","videoIntro","platform","url","authSlice","name","reducers","login","state","action","payload","localStorage","setItem","logout","removeItem","updateProfile","actions","reducer"],"sources":["/app/src/reducers/authSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isLoggedIn: false,\n  token: null,\n  userId: null,\n  fullName: \"\",\n  profilePicture: \"\",\n  email: \"\",\n  // Adding new fields to the initial state\n  bio: \"\",\n  roleTitle: \"\",\n  location: \"\",\n  phone: \"\",\n  videoIntro: {\n    platform: \"\",\n    url: \"\",\n  },\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      // Assuming action.payload contains token, userId, fullName, profilePicture, and email\n      const { token, userId, fullName, profilePicture, email } = action.payload;\n      localStorage.setItem(\"authToken\", token);\n      state.token = token;\n      state.userId = userId;\n      state.fullName = fullName;\n      state.profilePicture = profilePicture;\n      state.email = email;\n      state.isLoggedIn = true;\n    },\n    logout: (state) => {\n      localStorage.removeItem(\"authToken\");\n      state.token = null;\n      state.userId = null;\n      state.fullName = \"\";\n      state.profilePicture = \"\";\n      state.email = \"\";\n      state.isLoggedIn = false;\n      // Reset additional fields\n      state.bio = \"\";\n      state.roleTitle = \"\";\n      state.location = \"\";\n      state.phone = \"\";\n      state.videoIntro = { platform: \"\", url: \"\" };\n    },\n    updateProfile: (state, action) => {\n      const { fullName, profilePicture, bio, roleTitle, location, phone, videoIntro } = action.payload;\n      state.fullName = fullName ?? state.fullName;\n      if (profilePicture) {\n        state.profilePicture = profilePicture;\n      }\n      state.bio = bio ?? state.bio;\n      state.roleTitle = roleTitle ?? state.roleTitle;\n      state.location = location ?? state.location;\n      state.phone = phone ?? state.phone;\n      state.videoIntro = videoIntro ?? state.videoIntro;\n    },\n    // ... potentially other reducers ...\n  },\n});\n\nexport const { login, logout, updateProfile } = authSlice.actions;\n\nexport default authSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}