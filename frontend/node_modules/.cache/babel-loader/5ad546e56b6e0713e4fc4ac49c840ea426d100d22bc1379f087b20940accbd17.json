{"ast":null,"code":"//dashboardSlice.js\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isPrivate: false,\n  email: \"\",\n  dateJoined: \"\",\n  profile: {\n    fullName: \"\",\n    profilePicture: \"\",\n    bio: \"\",\n    roleTitle: \"\",\n    location: \"\",\n    phone: \"\",\n    videoIntro: {\n      platform: \"\"\n    },\n    achievements: []\n  },\n  skillsAssessment: {\n    quizzesTaken: []\n  },\n  testimonials: [],\n  analytics: {\n    visitorDemographics: []\n  },\n  repositories: [],\n  resume: {\n    education: [],\n    workExperience: [],\n    skills: [],\n    projects: [],\n    certifications: [],\n    languages: []\n  }\n};\nexport const dashboardSlice = createSlice({\n  name: \"dashboard\",\n  initialState,\n  reducers: {\n    setUser: (state, action) => {\n      return {\n        ...state,\n        ...action.payload\n      };\n    },\n    updateProfile: (state, action) => {\n      state.profile = {\n        ...state.profile,\n        ...action.payload\n      };\n    },\n    updateSkillsAssessment: (state, action) => {\n      state.skillsAssessment = {\n        ...state.skillsAssessment,\n        ...action.payload\n      };\n    },\n    updateTestimonials: (state, action) => {\n      state.testimonials = [...action.payload]; // Assuming action.payload is an array of testimonials\n    },\n\n    updateRepositories: (state, action) => {\n      state.repositories = [...action.payload]; // Assuming action.payload is an array of repositories\n    },\n\n    updateResume: (state, action) => {\n      state.resume = {\n        ...state.resume,\n        ...action.payload\n      };\n    },\n    // Reducer for updating a specific education entry\n    updateEducationById: (state, action) => {\n      const {\n        _id,\n        newData\n      } = action.payload;\n      const index = state.resume.education.findIndex(item => item._id === _id);\n      if (index !== -1) {\n        state.resume.education[index] = {\n          ...state.resume.education[index],\n          ...newData\n        };\n      }\n    },\n    // Reducer for updating a specific work experience entry\n    updateWorkExperienceById: (state, action) => {\n      const {\n        _id,\n        newData\n      } = action.payload;\n      const index = state.resume.workExperience.findIndex(item => item._id === _id);\n      if (index !== -1) {\n        state.resume.workExperience[index] = {\n          ...state.resume.workExperience[index],\n          ...newData\n        };\n      }\n    },\n    // Reducer for updating a specific skill\n    updateSkillById: (state, action) => {\n      const {\n        _id,\n        newData\n      } = action.payload;\n      const index = state.resume.skills.findIndex(skill => skill._id === _id);\n      if (index !== -1) {\n        state.resume.skills[index] = {\n          ...state.resume.skills[index],\n          ...newData\n        };\n      }\n    },\n    // Reducer for updating a specific project\n    updateProjectById: (state, action) => {\n      const {\n        _id,\n        newData\n      } = action.payload;\n      const index = state.resume.projects.findIndex(project => project._id === _id);\n      if (index !== -1) {\n        state.resume.projects[index] = {\n          ...state.resume.projects[index],\n          ...newData\n        };\n      }\n    },\n    // Reducer for updating a specific certification\n    updateCertificationById: (state, action) => {\n      const {\n        _id,\n        newData\n      } = action.payload;\n      const index = state.resume.certifications.findIndex(cert => cert._id === _id);\n      if (index !== -1) {\n        state.resume.certifications[index] = {\n          ...state.resume.certifications[index],\n          ...newData\n        };\n      }\n    },\n    // Reducer for updating a specific language\n    updateLanguageById: (state, action) => {\n      const {\n        _id,\n        newData\n      } = action.payload;\n      const index = state.resume.languages.findIndex(lang => lang._id === _id);\n      if (index !== -1) {\n        state.resume.languages[index] = {\n          ...state.resume.languages[index],\n          ...newData\n        };\n      }\n    }\n\n    // Add other reducers as necessary\n  }\n});\n\nexport const {\n  setUser,\n  updateProfile,\n  updateSkillsAssessment,\n  updateTestimonials,\n  updateRepositories,\n  updateResume,\n  updateEducationById,\n  updateWorkExperienceById,\n  updateSkillById,\n  updateProjectById,\n  updateCertificationById,\n  updateLanguageById\n} = dashboardSlice.actions;\nexport default dashboardSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isPrivate","email","dateJoined","profile","fullName","profilePicture","bio","roleTitle","location","phone","videoIntro","platform","achievements","skillsAssessment","quizzesTaken","testimonials","analytics","visitorDemographics","repositories","resume","education","workExperience","skills","projects","certifications","languages","dashboardSlice","name","reducers","setUser","state","action","payload","updateProfile","updateSkillsAssessment","updateTestimonials","updateRepositories","updateResume","updateEducationById","_id","newData","index","findIndex","item","updateWorkExperienceById","updateSkillById","skill","updateProjectById","project","updateCertificationById","cert","updateLanguageById","lang","actions","reducer"],"sources":["/app/src/reducers/dashboardSlice.js"],"sourcesContent":["//dashboardSlice.js\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isPrivate: false,\n  email: \"\",\n  dateJoined: \"\",\n  profile: {\n    fullName: \"\",\n    profilePicture: \"\",\n    bio: \"\",\n    roleTitle: \"\",\n    location: \"\",\n    phone: \"\",\n    videoIntro: {\n      platform: \"\",\n    },\n    achievements: [],\n  },\n  skillsAssessment: {\n    quizzesTaken: [],\n  },\n  testimonials: [],\n  analytics: {\n    visitorDemographics: [],\n  },\n  repositories: [],\n  resume: {\n    education: [],\n    workExperience: [],\n    skills: [],\n    projects: [],\n    certifications: [],\n    languages: [],\n  },\n};\n\nexport const dashboardSlice = createSlice({\n  name: \"dashboard\",\n  initialState,\n  reducers: {\n    setUser: (state, action) => {\n      return { ...state, ...action.payload };\n    },\n    updateProfile: (state, action) => {\n      state.profile = { ...state.profile, ...action.payload };\n    },\n    updateSkillsAssessment: (state, action) => {\n      state.skillsAssessment = { ...state.skillsAssessment, ...action.payload };\n    },\n    updateTestimonials: (state, action) => {\n      state.testimonials = [...action.payload]; // Assuming action.payload is an array of testimonials\n    },\n    updateRepositories: (state, action) => {\n      state.repositories = [...action.payload]; // Assuming action.payload is an array of repositories\n    },\n    updateResume: (state, action) => {\n      state.resume = { ...state.resume, ...action.payload };\n    },\n    // Reducer for updating a specific education entry\n    updateEducationById: (state, action) => {\n      const { _id, newData } = action.payload;\n      const index = state.resume.education.findIndex(\n        (item) => item._id === _id\n      );\n      if (index !== -1) {\n        state.resume.education[index] = {\n          ...state.resume.education[index],\n          ...newData,\n        };\n      }\n    },\n\n    // Reducer for updating a specific work experience entry\n    updateWorkExperienceById: (state, action) => {\n      const { _id, newData } = action.payload;\n      const index = state.resume.workExperience.findIndex(\n        (item) => item._id === _id\n      );\n      if (index !== -1) {\n        state.resume.workExperience[index] = {\n          ...state.resume.workExperience[index],\n          ...newData,\n        };\n      }\n    },\n\n    // Reducer for updating a specific skill\n    updateSkillById: (state, action) => {\n      const { _id, newData } = action.payload;\n      const index = state.resume.skills.findIndex((skill) => skill._id === _id);\n      if (index !== -1) {\n        state.resume.skills[index] = {\n          ...state.resume.skills[index],\n          ...newData,\n        };\n      }\n    },\n    // Reducer for updating a specific project\n    updateProjectById: (state, action) => {\n        const { _id, newData } = action.payload;\n        const index = state.resume.projects.findIndex(project => project._id === _id);\n        if (index !== -1) {\n          state.resume.projects[index] = { ...state.resume.projects[index], ...newData };\n        }\n      },\n  \n      // Reducer for updating a specific certification\n      updateCertificationById: (state, action) => {\n        const { _id, newData } = action.payload;\n        const index = state.resume.certifications.findIndex(cert => cert._id === _id);\n        if (index !== -1) {\n          state.resume.certifications[index] = { ...state.resume.certifications[index], ...newData };\n        }\n      },\n  \n      // Reducer for updating a specific language\n      updateLanguageById: (state, action) => {\n        const { _id, newData } = action.payload;\n        const index = state.resume.languages.findIndex(lang => lang._id === _id);\n        if (index !== -1) {\n          state.resume.languages[index] = { ...state.resume.languages[index], ...newData };\n        }\n      },\n  \n    // Add other reducers as necessary\n  },\n});\n\nexport const {\n  setUser,\n  updateProfile,\n  updateSkillsAssessment,\n  updateTestimonials,\n  updateRepositories,\n  updateResume,\n  updateEducationById,\n  updateWorkExperienceById,\n  updateSkillById,\n  updateProjectById,\n  updateCertificationById,\n  updateLanguageById\n} = dashboardSlice.actions;\n\nexport default dashboardSlice.reducer;\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE,EAAE;EACdC,OAAO,EAAE;IACPC,QAAQ,EAAE,EAAE;IACZC,cAAc,EAAE,EAAE;IAClBC,GAAG,EAAE,EAAE;IACPC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,UAAU,EAAE;MACVC,QAAQ,EAAE;IACZ,CAAC;IACDC,YAAY,EAAE;EAChB,CAAC;EACDC,gBAAgB,EAAE;IAChBC,YAAY,EAAE;EAChB,CAAC;EACDC,YAAY,EAAE,EAAE;EAChBC,SAAS,EAAE;IACTC,mBAAmB,EAAE;EACvB,CAAC;EACDC,YAAY,EAAE,EAAE;EAChBC,MAAM,EAAE;IACNC,SAAS,EAAE,EAAE;IACbC,cAAc,EAAE,EAAE;IAClBC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,cAAc,EAAE,EAAE;IAClBC,SAAS,EAAE;EACb;AACF,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG5B,WAAW,CAAC;EACxC6B,IAAI,EAAE,WAAW;EACjB5B,YAAY;EACZ6B,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,OAAO;QAAE,GAAGD,KAAK;QAAE,GAAGC,MAAM,CAACC;MAAQ,CAAC;IACxC,CAAC;IACDC,aAAa,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAAC3B,OAAO,GAAG;QAAE,GAAG2B,KAAK,CAAC3B,OAAO;QAAE,GAAG4B,MAAM,CAACC;MAAQ,CAAC;IACzD,CAAC;IACDE,sBAAsB,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACzCD,KAAK,CAACjB,gBAAgB,GAAG;QAAE,GAAGiB,KAAK,CAACjB,gBAAgB;QAAE,GAAGkB,MAAM,CAACC;MAAQ,CAAC;IAC3E,CAAC;IACDG,kBAAkB,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MACrCD,KAAK,CAACf,YAAY,GAAG,CAAC,GAAGgB,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;IAC5C,CAAC;;IACDI,kBAAkB,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MACrCD,KAAK,CAACZ,YAAY,GAAG,CAAC,GAAGa,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;IAC5C,CAAC;;IACDK,YAAY,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACX,MAAM,GAAG;QAAE,GAAGW,KAAK,CAACX,MAAM;QAAE,GAAGY,MAAM,CAACC;MAAQ,CAAC;IACvD,CAAC;IACD;IACAM,mBAAmB,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MACtC,MAAM;QAAEQ,GAAG;QAAEC;MAAQ,CAAC,GAAGT,MAAM,CAACC,OAAO;MACvC,MAAMS,KAAK,GAAGX,KAAK,CAACX,MAAM,CAACC,SAAS,CAACsB,SAAS,CAC3CC,IAAI,IAAKA,IAAI,CAACJ,GAAG,KAAKA,GACzB,CAAC;MACD,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBX,KAAK,CAACX,MAAM,CAACC,SAAS,CAACqB,KAAK,CAAC,GAAG;UAC9B,GAAGX,KAAK,CAACX,MAAM,CAACC,SAAS,CAACqB,KAAK,CAAC;UAChC,GAAGD;QACL,CAAC;MACH;IACF,CAAC;IAED;IACAI,wBAAwB,EAAEA,CAACd,KAAK,EAAEC,MAAM,KAAK;MAC3C,MAAM;QAAEQ,GAAG;QAAEC;MAAQ,CAAC,GAAGT,MAAM,CAACC,OAAO;MACvC,MAAMS,KAAK,GAAGX,KAAK,CAACX,MAAM,CAACE,cAAc,CAACqB,SAAS,CAChDC,IAAI,IAAKA,IAAI,CAACJ,GAAG,KAAKA,GACzB,CAAC;MACD,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBX,KAAK,CAACX,MAAM,CAACE,cAAc,CAACoB,KAAK,CAAC,GAAG;UACnC,GAAGX,KAAK,CAACX,MAAM,CAACE,cAAc,CAACoB,KAAK,CAAC;UACrC,GAAGD;QACL,CAAC;MACH;IACF,CAAC;IAED;IACAK,eAAe,EAAEA,CAACf,KAAK,EAAEC,MAAM,KAAK;MAClC,MAAM;QAAEQ,GAAG;QAAEC;MAAQ,CAAC,GAAGT,MAAM,CAACC,OAAO;MACvC,MAAMS,KAAK,GAAGX,KAAK,CAACX,MAAM,CAACG,MAAM,CAACoB,SAAS,CAAEI,KAAK,IAAKA,KAAK,CAACP,GAAG,KAAKA,GAAG,CAAC;MACzE,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBX,KAAK,CAACX,MAAM,CAACG,MAAM,CAACmB,KAAK,CAAC,GAAG;UAC3B,GAAGX,KAAK,CAACX,MAAM,CAACG,MAAM,CAACmB,KAAK,CAAC;UAC7B,GAAGD;QACL,CAAC;MACH;IACF,CAAC;IACD;IACAO,iBAAiB,EAAEA,CAACjB,KAAK,EAAEC,MAAM,KAAK;MAClC,MAAM;QAAEQ,GAAG;QAAEC;MAAQ,CAAC,GAAGT,MAAM,CAACC,OAAO;MACvC,MAAMS,KAAK,GAAGX,KAAK,CAACX,MAAM,CAACI,QAAQ,CAACmB,SAAS,CAACM,OAAO,IAAIA,OAAO,CAACT,GAAG,KAAKA,GAAG,CAAC;MAC7E,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBX,KAAK,CAACX,MAAM,CAACI,QAAQ,CAACkB,KAAK,CAAC,GAAG;UAAE,GAAGX,KAAK,CAACX,MAAM,CAACI,QAAQ,CAACkB,KAAK,CAAC;UAAE,GAAGD;QAAQ,CAAC;MAChF;IACF,CAAC;IAED;IACAS,uBAAuB,EAAEA,CAACnB,KAAK,EAAEC,MAAM,KAAK;MAC1C,MAAM;QAAEQ,GAAG;QAAEC;MAAQ,CAAC,GAAGT,MAAM,CAACC,OAAO;MACvC,MAAMS,KAAK,GAAGX,KAAK,CAACX,MAAM,CAACK,cAAc,CAACkB,SAAS,CAACQ,IAAI,IAAIA,IAAI,CAACX,GAAG,KAAKA,GAAG,CAAC;MAC7E,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBX,KAAK,CAACX,MAAM,CAACK,cAAc,CAACiB,KAAK,CAAC,GAAG;UAAE,GAAGX,KAAK,CAACX,MAAM,CAACK,cAAc,CAACiB,KAAK,CAAC;UAAE,GAAGD;QAAQ,CAAC;MAC5F;IACF,CAAC;IAED;IACAW,kBAAkB,EAAEA,CAACrB,KAAK,EAAEC,MAAM,KAAK;MACrC,MAAM;QAAEQ,GAAG;QAAEC;MAAQ,CAAC,GAAGT,MAAM,CAACC,OAAO;MACvC,MAAMS,KAAK,GAAGX,KAAK,CAACX,MAAM,CAACM,SAAS,CAACiB,SAAS,CAACU,IAAI,IAAIA,IAAI,CAACb,GAAG,KAAKA,GAAG,CAAC;MACxE,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBX,KAAK,CAACX,MAAM,CAACM,SAAS,CAACgB,KAAK,CAAC,GAAG;UAAE,GAAGX,KAAK,CAACX,MAAM,CAACM,SAAS,CAACgB,KAAK,CAAC;UAAE,GAAGD;QAAQ,CAAC;MAClF;IACF;;IAEF;EACF;AACF,CAAC,CAAC;;AAEF,OAAO,MAAM;EACXX,OAAO;EACPI,aAAa;EACbC,sBAAsB;EACtBC,kBAAkB;EAClBC,kBAAkB;EAClBC,YAAY;EACZC,mBAAmB;EACnBM,wBAAwB;EACxBC,eAAe;EACfE,iBAAiB;EACjBE,uBAAuB;EACvBE;AACF,CAAC,GAAGzB,cAAc,CAAC2B,OAAO;AAE1B,eAAe3B,cAAc,CAAC4B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}